---
# Create, extend, resize and remove LVM groups and volumes using logical volume manager (LVM).

#Manage creating/resizing tasks
- name: create volume group
  tags:
    - vg-create
    - lvm-create
  lvg:
    vg: "{{ vgname }}"
    pvs: "{{ pvname }}"
    state: present
  become: true
  register: vgcreate
  when:
    hostname is defined and
    vgname is defined and
    pvname is defined

- name: create logical volume
  tags:
    - lv-create
    - lvm-create
  lvol:
    vg: "{{ vgname }}"
    lv: "{{ lvname }}"
    size: "{{ lvsize }}"  # By default a value megabytes or optionally with [K|M|G|T] units; or as a [[+]][%][VG|PVS|FREE]
    state: present
    #shrink: no   # Ansible v2.2; Don't reduce lvol size if current size is higher than size requested. Useful with resize filesystem task.
  become: true
  register: lvcreate
  when:
    (hostname is defined and
    vgname is defined and
    lvname is defined)

- name: create filesystem on logical volume
  tags:
    - fs-create
    - lvm-create
  filesystem:
   fstype: "{{ fstype }}"  #ext2|3|4, xfs,
   dev: "/dev/{{ vgname }}/{{ lvname }}"
   resizefs: "{{ resizefs }}"  #If yes, then if the block device and filessytem size differ, grow the filesystem into the space. Note, an XFS will only grow if mounted.
   force: no   #Prevent accidental creating new filesystem on devices(s) that already has a filesystem.
  become: true
  register: fscreate
  when:
    (hostname is defined and
    fstype is defined and
    vgname is defined and
    lvname is defined and
    resizefs is defined)

- name: create mount point directory
  tags:
    - mountdir-create
    - lvm
  file:
    path: "{{ mountpoint }}"
    state: directory
  become: true
  when:
    (hostname is defined and
    mountpoint is defined)

- name: mount filesystem
  tags:
      - fs-mount
      - lvm-create
  mount:
    name: "{{ mountpoint }}"
    src: "/dev/{{ vgname }}/{{ lvname }}"
    fstype: "{{ fstype }}"   #Required when state is mounted
    state: mounted
  become: true
  register: mount
  when:
    (hostname is defined and
    mountpoint is defined and
    vgname is defined and
    lvname is defined and
    fstype is defined)

#Manage removing tasks
- name: unmount filesystem
  tags:
    - fs-unmount
    - lvm-remove
  mount:
    name: "{{ mountpoint }}"
    src: "/dev/{{ vgname }}/{{ lvname }}"
    fstype: "{{ fstype }}"
    state: unmounted
  register: unmount
  become: true
  when:
    (hostname is defined and
    mountpoint is defined and
    vgname is defined and
    lvname is defined and
    fstype is defined)

- name: remove logical volume
  tags:
    - lv-remove
    - lvm-remove
  lvol:
    vg: "{{ vgname }}"
    lv: "{{ lvname }}"
    state: absent
    force: yes
  become: true
  register: lvremove
  when:
    (hostname is defined and
    vgname is defined and
    lvname is defined)

- name: remove volume group
  tags:
    - vg-remove
    - lvm-remove
  lvg:
    vg: "{{ vgname }}"
    pvs: "{{ pvname }}"
    state: absent
    #force: yes  #If yes, force the removal of any logical volumes on the volume group without confirmation.
    #force: no    #DEFAULT: If no, volume group is not removed when it contains any logical volume.
  register: vgremove
  become: true
  when:
    (vgname is defined and
    pvname is defined and
    hostname is defined)
